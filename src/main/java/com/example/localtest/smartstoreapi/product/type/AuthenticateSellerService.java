
package com.example.localtest.smartstoreapi.product.type;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "AuthenticateSellerService", targetNamespace = "http://shopn.platform.nhncorp.com/", wsdlLocation = "file:/Users/seotaewan/smart-store/src/main/resources/wsdl/product/ShopNAPI.wsdl")
public class AuthenticateSellerService
    extends Service
{

    private final static URL AUTHENTICATESELLERSERVICE_WSDL_LOCATION;
    private final static WebServiceException AUTHENTICATESELLERSERVICE_EXCEPTION;
    private final static QName AUTHENTICATESELLERSERVICE_QNAME = new QName("http://shopn.platform.nhncorp.com/", "AuthenticateSellerService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/Users/seotaewan/smart-store/src/main/resources/wsdl/product/ShopNAPI.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        AUTHENTICATESELLERSERVICE_WSDL_LOCATION = url;
        AUTHENTICATESELLERSERVICE_EXCEPTION = e;
    }

    public AuthenticateSellerService() {
        super(__getWsdlLocation(), AUTHENTICATESELLERSERVICE_QNAME);
    }

    public AuthenticateSellerService(WebServiceFeature... features) {
        super(__getWsdlLocation(), AUTHENTICATESELLERSERVICE_QNAME, features);
    }

    public AuthenticateSellerService(URL wsdlLocation) {
        super(wsdlLocation, AUTHENTICATESELLERSERVICE_QNAME);
    }

    public AuthenticateSellerService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, AUTHENTICATESELLERSERVICE_QNAME, features);
    }

    public AuthenticateSellerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AuthenticateSellerService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns AuthenticateSellerServicePortType
     */
    @WebEndpoint(name = "AuthenticateSellerServiceSOAP11port_http")
    public AuthenticateSellerServicePortType getAuthenticateSellerServiceSOAP11PortHttp() {
        return super.getPort(new QName("http://shopn.platform.nhncorp.com/", "AuthenticateSellerServiceSOAP11port_http"), AuthenticateSellerServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuthenticateSellerServicePortType
     */
    @WebEndpoint(name = "AuthenticateSellerServiceSOAP11port_http")
    public AuthenticateSellerServicePortType getAuthenticateSellerServiceSOAP11PortHttp(WebServiceFeature... features) {
        return super.getPort(new QName("http://shopn.platform.nhncorp.com/", "AuthenticateSellerServiceSOAP11port_http"), AuthenticateSellerServicePortType.class, features);
    }

    /**
     *
     * @return
     *     returns AuthenticateSellerServicePortType
     */
    @WebEndpoint(name = "AuthenticateSellerServiceSOAP12port_http")
    public AuthenticateSellerServicePortType getAuthenticateSellerServiceSOAP12PortHttp() {
        return super.getPort(new QName("http://shopn.platform.nhncorp.com/", "AuthenticateSellerServiceSOAP12port_http"), AuthenticateSellerServicePortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuthenticateSellerServicePortType
     */
    @WebEndpoint(name = "AuthenticateSellerServiceSOAP12port_http")
    public AuthenticateSellerServicePortType getAuthenticateSellerServiceSOAP12PortHttp(WebServiceFeature... features) {
        return super.getPort(new QName("http://shopn.platform.nhncorp.com/", "AuthenticateSellerServiceSOAP12port_http"), AuthenticateSellerServicePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (AUTHENTICATESELLERSERVICE_EXCEPTION!= null) {
            throw AUTHENTICATESELLERSERVICE_EXCEPTION;
        }
        return AUTHENTICATESELLERSERVICE_WSDL_LOCATION;
    }

}
